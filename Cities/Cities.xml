<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cities</name>
    </assembly>
    <members>
        <member name="T:Cities.Controllers.CitizenController">
            <summary>
            Citizen operations
            </summary>
        </member>
        <member name="M:Cities.Controllers.CitizenController.#ctor(Contracts.IRepositoryWrapper,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Constructor with 3 parameters that will help logging comments, get database data and map into other entities
            </summary>
            <param name="logger"></param>
            <param name="repository"></param>
            <param name="mapper"></param>
            <param name="appSettings"></param>
        </member>
        <member name="M:Cities.Controllers.CitizenController.Authenticate(Entities.Models.AuthenticateModel)">
            <summary>
            Authenticates the user
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Cities.Controllers.CitizenController.GetAllCitizens">
            <summary>
            Returns all registered citizens
            </summary>
            <returns>All the registered citizens</returns>
        </member>
        <member name="M:Cities.Controllers.CitizenController.GetCitizenById(System.Int32)">
            <summary>
            Returns a specific citizen  
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Cities.Controllers.CitizenController.Register(Entities.DataTransferObjects.CitizenWithoutIdForCreateDto)">
            <summary>
            Creates a citizen
            </summary>
            <param name="citizenDto"></param>
            <returns>Status Code 200</returns>
        </member>
        <member name="M:Cities.Controllers.CitizenController.UpdateCitizen(System.Int32,Entities.DataTransferObjects.CitizenWithoutIdDto)">
            <summary>
            Updates a citizen
            </summary>
            <param name="id"></param>
            <param name="citizenDto"></param>
            <returns>No content</returns>
        </member>
        <member name="M:Cities.Controllers.CitizenController.DeleteCitizen(System.Int32)">
            <summary>
            Deletes a citizen
            </summary>
            <param name="id"></param>
            <returns>No content</returns>
        </member>
        <member name="T:Cities.Controllers.CityController">
            <summary>
            City related operations
            </summary>
        </member>
        <member name="M:Cities.Controllers.CityController.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Contracts.IRepositoryWrapper,AutoMapper.IMapper)">
            <summary>
            Constructor that receives a logger for logging, a repository and a mapper for mapping objects
            </summary>
            <param name="logger"></param>
            <param name="repository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Cities.Controllers.CityController.GetAllCities">
            <summary>
            Return all the registered cities
            </summary>
            <returns>Return all the registered cities</returns>
        </member>
        <member name="M:Cities.Controllers.CityController.GetCityById(System.Int32)">
            <summary>
            Returns the requested city
            </summary>
            <param name="id"></param>
            <returns>Returns the requested city</returns>
        </member>
        <member name="M:Cities.Controllers.CityController.CreateCity(Entities.DataTransferObjects.CityWithoutIdForCreateDto)">
            <summary>
            Creates a city
            </summary>
            <param name="cityDto"></param>
            <returns>Http status code 200</returns>
        </member>
        <member name="M:Cities.Controllers.CityController.UpdateCity(System.Int32,Entities.DataTransferObjects.CityWithoutId)">
            <summary>
            Updates a city
            </summary>
            <param name="id"></param>
            <param name="cityDto"></param>
            <returns>No content</returns>
        </member>
        <member name="M:Cities.Controllers.CityController.DeleteCity(System.Int32)">
            <summary>
            Deletes a city
            </summary>
            <param name="id"></param>
            <returns>No content</returns>
        </member>
        <member name="T:Cities.Profile.MappingProfile">
            <summary>
            Automapper profile
            </summary>
        </member>
        <member name="M:Cities.Profile.MappingProfile.#ctor">
            <summary>
            All mapped classes go inside this method
            </summary>
        </member>
        <member name="T:Cities.Startup">
            <summary>
            Here you should configure the middlewares and different services.
            </summary>
        </member>
        <member name="M:Cities.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor of the class
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Cities.Startup.Configuration">
            <summary>
            Property of Net Core that allows you to configure
            </summary>
        </member>
        <member name="M:Cities.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Cities.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
